// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wirex

import (
	"context"
	"github.com/HotHat/gin-admin/v10/internal/ddd/rbac/api"
	"github.com/HotHat/gin-admin/v10/internal/ddd/rbac/repo"
	"github.com/HotHat/gin-admin/v10/internal/ddd/rbac/service"
	"github.com/HotHat/gin-admin/v10/internal/ddd/route/admin"
	"github.com/HotHat/gin-admin/v10/pkg/util"
)

// Injectors from wire.go:

func BuildInjector(ctx context.Context) (*Injector, func(), error) {
	cacher, cleanup, err := InitCacher(ctx)
	if err != nil {
		return nil, nil, err
	}
	auther, cleanup2, err := InitAuth(ctx)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	db, cleanup3, err := InitDB(ctx)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	userRepo := &repo.UserRepo{
		DB: db,
	}
	userRoleRepo := &repo.UserRoleRepo{
		DB: db,
	}
	menuRepo := &repo.MenuRepo{
		DB: db,
	}
	trans := &util.Trans{
		DB: db,
	}
	userService := &service.UserService{
		Cache:        cacher,
		Trans:        trans,
		UserRepo:     userRepo,
		UserRoleRepo: userRoleRepo,
	}
	authService := &service.AuthService{
		Cache:        cacher,
		Auth:         auther,
		UserRepo:     userRepo,
		UserRoleRepo: userRoleRepo,
		MenuRepo:     menuRepo,
		UserService:  userService,
	}
	loginApi := &api.LoginApi{
		AuthService: authService,
	}
	menuResourceRepo := &repo.MenuResourceRepo{
		DB: db,
	}
	roleRepo := &repo.RoleRepo{
		DB: db,
	}
	casbinx := &admin.Casbinx{
		Cache:            cacher,
		MenuRepo:         menuRepo,
		MenuResourceRepo: menuResourceRepo,
		RoleRepo:         roleRepo,
	}
	adminHandler := &admin.AdminHandler{
		AuthService: authService,
		Casbinx:     casbinx,
	}
	rbacRouteV1 := &admin.RBACRouteV1{
		LoginAPI: loginApi,
		Handler:  adminHandler,
	}
	injector := &Injector{
		RBACRouteV1: rbacRouteV1,
	}
	return injector, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
